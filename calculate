#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var _ = require('./index');

program
  .version('0.0.1')
  .option('-a, --add', 'add')
  .option('-s, --subtract', 'subtract')
  .option('-P, --pineapple', 'Add pineapple')
  .option('-b, --bbq', 'Add bbq sauce')
  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')
  .parse(process.argv);

console.log('you have entered the following calculation:');
if (program.add) {
  console.log('  - Add', program.args);
  console.log('=' + _.add(program.args));
}
if (program.subtract) console.log(' - Subtract', program.args);
if (program.pineapple) console.log('  - pineapple');
if (program.bbq) console.log('  - bbq');
//console.log('  - %s cheese', program.cheese);

function range(val) {
  return val.split('..').map(Number);
}

function list(val) {
  return val.split(',');
}

function collect(val, memo) {
  memo.push(val);
  return memo;
}

function increaseVerbosity(v, total) {
  return total + 1;
}

program
  .version('0.0.1')
  .usage('[options] <file ...>')
  .option('-i, --integer <n>', 'An integer argument', parseInt)
  .option('-f, --float <n>', 'A float argument', parseFloat)
  .option('-r, --range <a>..<b>', 'A range', range)
  .option('-l, --list <items>', 'A list', list)
  .option('-o, --optional [value]', 'An optional value')
  .option('-c, --collect [value]', 'A repeatable value', [])
  .option('-v, --verbose', 'A value that can be increased', increaseVerbosity, 0)
  .parse(process.argv);

// console.log(' int: %j', program.integer);
// console.log(' float: %j', program.float);
// console.log(' optional: %j', program.optional);
// program.range = program.range || [];
// console.log(' range: %j..%j', program.range[0], program.range[1]);
// console.log(' list: %j', program.list);
// console.log(' collect: %j', program.collect);
// console.log(' verbosity: %j', program.verbose);
// console.log(' args: %j', program.args);

/******************************************/

// var _ = require('./index.js');

// process.argv = process.argv.slice(1);

// _.checkOperator(process.argv[2])

// console.log(_.performOp(process.argv[1], process.argv[3], process.argv[2]));


